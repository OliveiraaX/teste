---
- name: Verificar e atualizar ambiente Iptell
  hosts: all
  become: yes
  tasks:
    - name: Verificar versão do Node.js
      shell: node -v
      register: node_version

    - name: Verificar se a versão do Node.js é maior ou igual a 18
      fail:
        msg: "A versão do Node.js é inferior a 18. A versão atual é: {{ node_version.stdout }}"
      when: node_version.stdout | regex_search('^v?(1[0-7]|[1-9][0-9]*)(\.)') is defined

    - name: Verificar e instalar php-curl
      shell: dpkg -s php-curl | grep "Status: install ok installed"
      register: php_curl_installed
      ignore_errors: yes

    - name: Instalar php-curl se não estiver instalado
      apt:
        name: php-curl
        state: present
      when: php_curl_installed.rc != 0

    - name: Atualizar o repositório Iptell
      block:
        - name: Entrar no diretório do Iptell e tentar git pull
          shell: |
            cd /var/www/html/iptell
            git pull
          register: git_pull_result
          failed_when: git_pull_result.rc != 0

        - name: Verificar se a atualização do repositório falhou
          block:
            - name: Tentar checkout se git pull falhar
              shell: |
                cd /var/www/html/iptell
                git checkout backend/packed-locked.json
              register: git_checkout_result

            - name: Cancelar execução se git checkout também falhar
              fail:
                msg: "Erro ao atualizar o repositório e também ao tentar git checkout. Cancelando execução."
              when: git_checkout_result.rc != 0

          when: git_pull_result.rc != 0

        - name: Instalar pacotes NPM
          shell: |
            cd /var/www/html/iptell
            npm i
            npm run install:all
          register: npm_install_result
          failed_when: npm_install_result.rc != 0

        - name: Solicitar ajuda se falhar durante a instalação de pacotes NPM
          fail:
            msg: "Erro durante a instalação de pacotes NPM ou inicialização dos serviços. Solicite ajuda."
          when: npm_install_result.rc != 0

    - name: Executar migrations
      shell: npm run migrations:latest
      register: migrations_result
      failed_when: migrations_result.rc != 0

    - name: Verificar se é um cliente novo e ocorreu erro
      fail:
        msg: "Erro ao executar migrations. Verifique se é um cliente novo."
      when: migrations_result.rc != 0

    - name: Gerenciar processos PM2
      block:
        - name: Verificar os processos PM2
          shell: pm2 ls
          register: pm2_processes

        - name: Verificar se há processos com nome "Hub" ou "Integração"
          fail:
            msg: "Processos com nome 'Hub' ou 'Integração' encontrados. Não executar 'pm2 delete all'."
          when: "'Hub' in pm2_processes.stdout or 'Integração' in pm2_processes.stdout"

        - name: Executar 'pm2 delete all' se não houver processos com nomes restritos
          shell: pm2 delete all
          when: "'Hub' not in pm2_processes.stdout and 'Integração' not in pm2_processes.stdout"
